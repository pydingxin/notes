一个GTID的流向：
【1】主节点提交时 GTID→ @@gtid_executed→ binlog
【2】主节点binlog→ 从节点relaylog
【3】relaylog → @@gtid_next 检查并执行
【4】从节点提交时 GTID→ @@gtid_executed→ binlog

主节点记录的提交事务主要是DDL & DML，但有些事务（比如涉及明文密码）会被剔除。此外函数、触发器、视图、用户、角色、grant、event等的增删改都会产生GTID，一个复杂命令可能产生多个GTID。

主从节点都是提交时GTID→ @@gtid_executed→ binlog，binlog滚动才写入mysql.gtid_executed存档。
简单讲，所有服务器上执行过的GTID存为三份：变量→日志→库表，若从节点禁用日志则直接进入库表。
考虑binlog的清理和禁用问题，可以说@@gtid_executed完整又实时，binlog实时不一定完整，mysql.gtid_executed完整不一定实时。

本机上执行过的GTID都在@@gtid_executed，若其binlog被清理，就记入@@gtid_purged。
【1】从节点禁用binlog，则提交就等于被清理。
【2】手动清理binlog。
【3】手动设置@@gtid_purged。
