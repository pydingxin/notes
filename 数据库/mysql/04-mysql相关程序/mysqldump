物理备份是生成二进制文件，社区版不支持。
热备即运行时备份，涉及锁表，社区版不支持。
mysqldump在window上默认生成utf16编码文件，不能用。

=========================================================
mysqldump是逻辑备份，对库表每行数据逐条生成命令，把命令追加到文本中，恢复数据时一条条执行，这种备份非常慢。

其中生成命令有两种方式，一是逐条取出数据处理，二是把整个表拿到内存中处理。数据量大时可能无法放入内存，可用--quick 选项逐条取出。

=========================================================
mysqldump [options] db_name [tbl_name ...]
备份某库中的表，不指定表相当于备份该库

mysqldump [options] --databases db_name ...
备份某些库，用--databases指定库名

mysqldump [options] --all-databases
备份所有库

=========================================================
options中有些有用的参数

-----------------------------
--bind-address
如果有多个网卡，指定一个来连接服务器

--host
--port
--password
操作指定机器，默认localhost

-----------------------------
--no-create-db
不用建库命令

--add-drop-database
在每条建库命令前，添加删库命令
此选项配合--all-databases时，mysql库也会被dump进去，但mysql是系统库，删除时会发生错误。所以这两个选项不能同时用。

--add-drop-table
在每条建表命令前，添加删表命令，反之为
--skip-add-drop-table

--no-create-info
不用建表命令

--no-data
不添加数据，只做建库建表

--ignore-table
忽略某些表
-----------------------------

--lock-all-tables
所有库的所有表加读锁

--lock-tables
dump某库时，只锁本库，释放其他库的读锁。
这会导致库级别的不一致。

--source-data[=value] after v8.0.26
--master-data[=value] before v8.0.26
在source上为replica做全量备份。
value默认1,即在生成文件中写入CHANGE REPLICATION SOURCE|MASTER TO语句，若为2则注释该语句。
自动开启--lock-all-tables，启动并保持全局读锁，直到手动释放，以保证数据一致性。
若配合--single-transaction时，只在开始时锁住一会儿，数据一致性靠快照读实现。

-----------------------------

--skip-comments
不加说明文字

--quick
一次取一条数据操作，不把整库数据读到内存，反之为
--skip-quick

--result-file
指定输出文件

--where
只dump指定条件的行


=========================================================
例子

备份/恢复某库
mysqldump dbname > backup.sql
mysql dbname < backup.sql
可以看到backup.sql有建表、插入数据的语句，但没有建库的语句，所以恢复时dbname应该已经存在。
其实这已经够用了，每个库本就应该分开备份。




