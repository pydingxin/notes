output子句，显示被操作的数据
在update/delete/insert子句中，不显示被操作的行，output子句可以把它们显示出来
用deleted.col、inserted.col指代受影响的值，生成一个临时表，如：

update tt 
set name='_' +cast(id as nvarchar(3))
output deleted.name as del,inserted.name as ins
where id <3
↓
hehe1     	_1        
hehe2     	_2      
————————————————————————————————————————  
with-as子句，把搜索结果保存到临时表，如下用tt中的name/id字段构造了一个新表man
with man(nm,id) as
(select name,id from tt)

select id from man
————————————————————————————————————————
select ... for json auto
把搜索结果搞成json格式的字符串,或者xml格式，挺有意思
select * from tt
for json auto

还可以保存为变量：
declare @s nvarchar(max) = (select * from tt for json auto)
————————————————————————————————————————
group by子句，聚合搜索
聚合搜索是个很有意思的东西，group by col中，所有col列的唯一值自成一行，
但是每个这种行必然对应多个不同行，所以，如果要同时显示一个未被groupby的列，必须用某种方式把这个列聚合，这就是聚合搜索的意思。
例1：
select name ←被显示的列
from sales
group by name←被groupby的列

例2：
select name,count(distinct(id)) ←被显示的列
from sales
group by name←被groupby的列
这里id没有被groupby，但需要显示，就要用聚合函数处理对应id集合
聚合函数有count/min/max/avg/sum
————————————————————————————————————————
select into 存到一个新表，如↓

select 采样点,count(证件号) as cnt 
into ct --直接放在第二行
from...
————————————————————————————————————————
having boolean
having与group by配合，对分组进行筛选，如↓

select 采样点,count(证件号) as cnt from new
group by 采样点
having count(证件号)>10

注意：having里不能用别名
————————————————————————————————————————
order by col asc/desc
对select结果排序
————————————————————————————————————————
select 的结果赋值给变量
select  @x=count(*) from cy_jilu
————————————————————————————————————————
————————————————————————————————————————
————————————————————————————————————————
————————————————————————————————————————
————————————————————————————————————————
————————————————————————————————————————
————————————————————————————————————————
————————————————————————————————————————