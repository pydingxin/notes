用ghttp.Request对象获取输入，它有很多获取输入的方法。

# 提交方式
要说获取输入，先得分析客户端有哪些提交数据的方式。
-------------------------------------------------
## Query
get类型url提交，如 http://127.0.0.1/index?id=1&name=john
-------------------------------------------------
## Form
post类型表单提交，含各种编码:
application/x-www-form-urlencoded、multipart/mixed
application/form-data、multipart/form-data
-------------------------------------------------
## Body
body中的原始内容，如json/xml
-------------------------------------------------
## Router
路由参数，来自路由规则解析，如 /user/{name} 对 /user/dingxin的解析
-------------------------------------------------
## Custom
自定义参数，在服务端middleware/handler中用SetParam/GetParam使用
-------------------------------------------------


# 获取方式
不同httpMethod可能有相同提交方式，所以按提取方式分类。
-------------------------------------------------
## GetQuery 
获取Query/Body参数
-------------------------------------------------
## GetForm 
form参数，根据请求头Content-Type智能解码。
-------------------------------------------------
## Get/GetRequest
获取5类提交的数据:Router/Query/Body/Form/Custom
-------------------------------------------------
## Get*Struct
用Get提取的参数生成对象
-------------------------------------------------
## GetBody/GetBodyString
body中的原始数据，不解析
-------------------------------------------------
## GetJson
针对json，自动解析为gjson.Json对象指针
-------------------------------------------------
## Exit*
不获取，退出处理流程
-------------------------------------------------

# 参数类型
获取到的是*g.Var，因为是泛型，可以方便地转为其他类型：
r.Get(xx).String()
r.Get(xx).Float32() 
r.Get(xx).Int() //对浮点数向下取整

# 参数优先级
有两类方法使用多种参数，如果不同种参数有重名的，优先级如下
Get/GetRequset: Router < Query < Body < Form < Custom
GetQuery: Query > Body
为避免这种隐形bug，最好只用Form+Json的方式，够用且无疑义。