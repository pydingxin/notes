
本系统使用caddy2服务器、goframe后端、vue3前端、sqlserver数据库。

关于根目录：
caddy根目录static；goframe根目录也是static，用户上传文件保存在这里面。
main.exe和caddy.exe放一起，即可共用static目录，方便通过服务器获取goframe保存的文件。

caddy2守护进程：
sc.exe create caddy start= auto binPath= "F:\mydev\caddy3Server\caddy.exe run"
sc.exe start caddy
sc.exe stop caddy


后台服务，把配置文件也拷贝到caddy文件夹里。

数据库dsn:sqlserver://sa:dingxin@localhost:1433?database=fagaiju

管理员账号默认 admin FaGaiJu666!

在阿里云ecs的云服务器ECS-网络与安全-安全组 里， 把80端口添加上，就可以访问了。


#### 前端fetchapi的全局url也修改
=======================================================================
这个项目是我的首个正式项目，过半精力用于摸索框架、熟悉工具。

最终还算能用，但设计和实现都一塌糊涂：
1、实体信息逻辑上分为静态和动态，物理上硬是分了两个表，这是完全没必要的。
2、组件库naiveUI也很难受：表格里渲染按钮用render函数，导致事件满天飞。侧边栏高度不占满。表格单元格的colspan和rowspan设置在表头里，而不是单元格的属性。
3、各种逻辑漏洞并未补全，缺乏请求参数检查。

缺点太多了，整个项目有变成屎山的倾向，还是经验不足。

但收获也很大，探索了一套可行、高效、完整的思路：
前端 vite+vue3
后端 goframe+gorm
服务器 caddy
数据库 sqlserver
这套流程在性能、稳定、易用等方面非常优秀。

还总结了一些开发技巧，比如：
goframe和caddy共享根目录。
vue的store和view的关系，事件、数据、视图的互动。
layout切换中，专门搞个路由配置，给sider和content读取。


