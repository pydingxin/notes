caddy的管理站点，默认是http://localhost:2019【可配置】，注意不是https

每次修改配置，上一次配置都会保存到磁盘，用caddy run --resume恢复上次配置

用以下方式，对配置增删查改，但并发修改会出问题，所以管理终端只能管理员使用，不能对外公开。

_________________________________________________________________________________
post http://localhost:2019/load
上传配置文件以修改配置，如果失败自动回滚
用Content-Type注明文件类型，如:
curl "http://localhost:2019/load" -H "Content-Type: application/json" -d @caddy.json
curl "http://localhost:2019/load" -H "Content-Type: text/caddyfile" --data-binary @Caddyfile

_________________________________________________________________________________
post http://localhost:2019/stop
关闭服务器 
如：curl -X POST "http://localhost:2019/stop"

_________________________________________________________________________________
GET http://localhost:2019/config/[path]
获取配置，数组元素用/0/访问

_________________________________________________________________________________
POST http://localhost:2019/config/[path]
修改指定路径的配置。如果路径是个对象，则创造或替换，如果是数组，则append

_________________________________________________________________________________
PUT http://localhost:2019/config/[path]
修改指定路径的配置。如果是个数组位置，插入进去；如果是obj创建

_________________________________________________________________________________
PATCH http://localhost:2019/config/[path]
修改指定路径的配置。严格替换。

_________________________________________________________________________________
DELETE  http://localhost:2019/config/[path]
删除指定路径的配置。
如删除所有配置：
curl -X DELETE "http://localhost:2019/config/"
删除单个站点：
curl -X DELETE "http://localhost:2019/config/apps/http/servers/myserver"

_________________________________________________________________________________
想要方便地使用某个配置，直接给它加id
{
    "@id": "dingxin",
    "handler": "reverse_proxy"
}
它的路径就变成了http://localhost:2019/id/dingxin/。如同dom节点的id一样

_________________________________________________________________________________
POST  http://localhost:2019/adapt/
在线把配置文件转为json格式，跟caddy adapt命令一样